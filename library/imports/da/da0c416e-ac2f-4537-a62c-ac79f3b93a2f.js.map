{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,kBAAU,EAAC;AACP,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;AACD,kBAAU,EAAE;AACR,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;AACD,iBAAS,EAAC;AACN,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;AACD,sBAAc,EAAE;AACZ,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;AACD,qBAAa,EAAE;AACX,uBAAS,IAAI;AACb,gBAAI,EAAG,EAAE,CAAC,MAAM;SACnB;AACD,eAAO,EAAE;AACL,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;AACD,gBAAQ,EAAE;AACN,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;AACD,iBAAS,EAAG,CAAC;KAChB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;AAED,aAAS,EAAE,qBAAU;AACjB,YAAG,IAAI,CAAC,MAAM,EAAC;AACX,gBAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;AAED,eAAW,EAAG,uBAAU;AACpB,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AACvB,YAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAI,CAAC,GAAG,GAAG,KAAK,CAAC;;AAEjB,YAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KAChC;;AAED,aAAS,EAAE,qBAAU;AACjB,YAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;AAED,mBAAe,EAAE,2BAAU;AACvB,YAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChC,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAErB,gBAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;AAChC,gBAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9B,gBAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;SAClC;AACD,YAAI,IAAI,CAAC,GAAG,EAAE;AACV,gBAAI,CAAC,WAAW,EAAE,CAAC;AACnB,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;KACJ;;AAED,mBAAe,EAAG,yBAAS,EAAE,EAAC;AAC1B,YAAI,CAAC,aAAa,IAAI,EAAE,CAAC;AACzB,YAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjF,YAAG,IAAI,CAAC,aAAa,IAAE,CAAC,EAAC;AACrB,gBAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,gBAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AACvB,gBAAI,CAAC,cAAc,CAAC,MAAM,GAAG,OAAO,CAAC;AACrC,gBAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC;AACnC,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB;KACJ;;AAED,iBAAa,EAAG,uBAAS,EAAE,EAAC;;AAExB,YAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC7D,YAAI,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;;AAEjE,YAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;AACpB,YAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;AAI7C,YAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAC;AAC3B,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;SAC/B;;AAED,YAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAC;AAClB,gBAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,gBAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AAChB,gBAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,gBAAI,CAAC,cAAc,CAAC,MAAM,GAAG,SAAS,CAAC;AACvC,gBAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;SACrC;KACJ;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,YAAG,IAAI,CAAC,QAAQ,EAAC;AACb,gBAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;SAC5B,MAAK,IAAG,IAAI,CAAC,MAAM,EAAC;AACjB,gBAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;SAC1B;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        titleLabel:{\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        highLabel:{\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        countDownLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        controlButton: {\r\n            default: null,\r\n            type : cc.Button\r\n        },\r\n        clickMe: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        clockBar: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        highScore : 0\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.gameRestart();\r\n    },\r\n\r\n    onClickMe: function(){\r\n        if(this.inGame){\r\n            this.score++;\r\n        }\r\n    },\r\n    \r\n    gameRestart : function(){\r\n        this.score = 0;\r\n        this.gameTime = 10;\r\n        this.coolDownCount = 3;\r\n        this.coolDown = false;\r\n        this.inGame = false;\r\n        this.end = false;\r\n        \r\n        this.clockBar.setRotation(0);\r\n    },\r\n    \r\n    onRestart: function(){\r\n        this.gameRestart();\r\n    },\r\n    \r\n    onControlButton: function(){\r\n        if( !this.coolDown && !this.inGame ){\r\n            this.coolDown = true;\r\n            \r\n            this.titleLabel.enabled = false;\r\n            this.highLabel.enabled = true;\r\n            this.scoreLabel.enabled = true;\r\n        }\r\n        if( this.end ){\r\n            this.gameRestart();\r\n            this.coolDown = true;\r\n        }\r\n    },\r\n    \r\n    coolDownProcess : function(dt){\r\n        this.coolDownCount -= dt;\r\n        this.countDownLabel.string = Math.ceil(this.coolDownCount).toFixed(0).toString();\r\n        if(this.coolDownCount<=0){\r\n            this.coolDown = false;\r\n            this.coolDownCount = 0;\r\n            this.countDownLabel.string = \"Click\";\r\n            this.controlButton.enabled = false;\r\n            this.inGame = true;\r\n        }\r\n    },\r\n    \r\n    inGameProcess : function(dt){\r\n        \r\n        this.scoreLabel.string = \"Clicks : \" + this.score.toString();\r\n        this.highLabel.string = \"Highest : \" + this.highScore.toString();\r\n        \r\n        this.gameTime -= dt;\r\n        this.clockBar.setRotation(-36*this.gameTime);\r\n        \r\n        //Real time high score tracking\r\n        \r\n        if(this.score > this.highScore){\r\n            this.highScore = this.score;\r\n        }\r\n        \r\n        if(this.gameTime <= 0){\r\n            this.inGame = false;\r\n            this.end = true;\r\n            this.gameTime = 0;\r\n            this.countDownLabel.string = \"Restart\";\r\n            this.controlButton.enabled = true;\r\n        }\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        console.log(this.highScore);\r\n        if(this.coolDown){\r\n            this.coolDownProcess(dt);\r\n        }else if(this.inGame){\r\n            this.inGameProcess(dt);\r\n        }\r\n    },\r\n});"
  ]
}