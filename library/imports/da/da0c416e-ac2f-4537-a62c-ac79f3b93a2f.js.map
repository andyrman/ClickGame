{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,kBAAU,EAAE;AACR,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;AACD,sBAAc,EAAE;AACZ,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;AACD,eAAO,EAAE;AACL,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;AACD,eAAO,EAAE;AACL,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;AACD,WAAG,EAAE;AACD,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;AACD,aAAK,EAAG,CAAC;AACT,YAAI,EAAG,EAAE;AACT,aAAK,EAAG,CAAC;AACT,iBAAS,EAAG,IAAI;AAChB,WAAG,EAAG,IAAI;KACb;;;AAGD,UAAM,EAAE,kBAAY,EACnB;;AAED,aAAS,EAAE,qBAAU;AACjB,YAAG,CAAC,IAAI,CAAC,GAAG,EAAC;AACT,gBAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;AAED,aAAS,EAAE,qBAAU;AACjB,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACf,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,YAAI,CAAC,GAAG,GAAG,KAAK,CAAC;;AAEjB,YAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvC;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,SAAS,EAAC;AACd,gBAAI,CAAC,KAAK,IAAI,EAAE,CAAC;AACjB,gBAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzE,gBAAG,IAAI,CAAC,KAAK,IAAE,CAAC,EAAC;AACb,oBAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,oBAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,oBAAI,CAAC,cAAc,CAAC,MAAM,GAAG,SAAS,CAAC;AACvC,oBAAI,CAAC,GAAG,GAAG,KAAK,CAAC;aACpB;SACJ,MAAI;AACD,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC/C,gBAAI,CAAC,IAAI,IAAI,EAAE,CAAC;AAChB,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpC,gBAAG,IAAI,CAAC,IAAI,IAAE,CAAC,EAAC;AACZ,oBAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AAChB,oBAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACd,oBAAI,CAAC,cAAc,CAAC,MAAM,GAAG,OAAO,CAAC;aACxC;SACJ;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        scoreLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        countDownLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        clickMe: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        restart: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        bar: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        score : 0,\r\n        time : 10,\r\n        count : 3,\r\n        countDown : true,\r\n        end : true,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n    },\r\n    \r\n    onClickMe: function(){\r\n        if(!this.end){\r\n            this.score++;\r\n        }\r\n    },\r\n    \r\n    onRestart: function(){\r\n        this.score = 0;\r\n        this.time = 10;\r\n        this.count = 3;\r\n        this.countDown = true;\r\n        this.end = false;\r\n        \r\n        this.bar.setRotation(-36*this.time);\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.countDown){\r\n            this.count -= dt;\r\n            this.countDownLabel.string = Math.ceil(this.count).toFixed(0).toString();\r\n            if(this.count<=0){\r\n                this.countDown = false;\r\n                this.count = 0;\r\n                this.countDownLabel.string = \"Start!!\";\r\n                this.end = false;\r\n            }\r\n        }else{\r\n            this.scoreLabel.string = this.score.toString();\r\n            this.time -= dt;\r\n            this.bar.setRotation(-36*this.time);\r\n            if(this.time<=0){\r\n                this.end = true;\r\n                this.time = 0;\r\n                this.countDownLabel.string = \"End!!\";\r\n            }\r\n        }\r\n    },\r\n});"
  ]
}